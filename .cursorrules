# Visual Split Mark 开发规则和注意事项

## 项目结构
- 使用 Nuxt 3 + TypeScript
- 使用 Naive UI 作为组件库
- 使用 Pinia 进行状态管理
- 使用 JSON 文件进行数据存储

## 数据存储
- 使用 JSON 文件存储项目数据
- 文件位于 storage 目录下
- 包含自动备份功能

## Lessons
1. 数据存储选择
   - 对于桌面应用，使用简单的 JSON 文件存储比使用数据库更轻量和直接
   - 不需要复杂的数据库功能时，避免引入不必要的依赖 
2. 不要运行 yarn dev，而是提示用户执行
3. 安装依赖时，使用 withproxy 前缀以配置代理

## 代码组织
1. 对于复杂的前端组件，应该将功能拆分为独立的可组合函数（composables）
2. 类型定义、常量配置和工具函数应该分别放在独立的文件中
3. 主文件应该只负责协调各个模块，不应该包含具体的业务逻辑
4. 每个模块应该有明确的职责，避免功能重叠

## 重构策略
1. 重构应该分阶段进行，每个阶段都要保证功能正常
2. 在移动代码之前，应该先确定好目标结构
3. 使用类型系统来指导重构，确保接口的一致性
4. 重构后要进行充分的测试，确保功能正常

## 最佳实践
1. 使用 TypeScript 的类型系统来提高代码质量
2. 使用 Vue 3 的组合式 API 来组织代码
3. 将状态管理和 UI 逻辑分离
4. 使用事件委托来处理复杂的交互
5. 保持代码的可测试性和可维护性
